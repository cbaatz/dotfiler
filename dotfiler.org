* Dotfiler
:PROPERTIES:
:CATEGORY: Dotfiler
:END:

Dotfiler manages dotfile symlinks to a separate folder to make backup
and version control easier.

** TODO Clean up packaging
SCHEDULED: <2011-02-05 Sat>
** TODO Create README file
SCHEDULED: <2011-02-05 Sat>
** TODO Make it possible to create relative symlinks
** TODO Command to restore dotfiles from backup (put managed file list in .dotfiles)
** Understanding Dotfiler
*** Management convention

Dotfiler helps you manage dot-files according to the following
convention:

1. Managed dot-files are symlinks to target files in a designated
   dot-files directory.
2. The target files lack the leading dot of the dot-file they
   represent, but otherwise have the same name.
3. Mangaged dot-files can be normal files, directories or files inside
   dot-directories. For files inside dot-directoreis, only the root
   directory's leading dot is removed.
4. Dotfiler requires that a special symlink file, ~/.dotfiles, points
   to the Dotfiler config in the designated dot-files directory.

For example, if our dotfiles directory is ~/dotdir and we want to
manage .emacs, and ~/.ssh/config but nothing else inside ~/.ssh, we
would have the following files (-> indicates symlink):

~/.dotfiles -> ~/dotdir/dotfiles     # Dotfiler config symlink [required]
~/dotdir/dotfiles                    # Dotfiler config target
~/.emacs -> ~/dotdir/emacs           # Managed dot-file
~/dotdir/emacs                       # Target of managed dot-file
~/.ssh/config -> ~/dotdir/ssh/config # Managed dot-file inside dot-directory
~/dotdir/ssh/config                  # Target of managed dot-file
~/.ssh/known_hosts                   # Example of unmanaged dot-file

*** Dotfiler functionality

Dotfiler makes it easy to use this dot-file management convention by
providing the following commands:

**** dotfiler

Calling just dotfiler gives basic information like whether Dotfiler is
initialised and if so what the path to the Dotfiler directory is.

**** dotfiler init DOTFILER_DIR

This command initialises Dotfiler management as follows:

1. Creates the DOTFILER_DIR if it doesn't exist
2. Creates an initial Dotfiler config file DOTFILER_DIR/dotfiles
3. Creates the required symlink ~/.dotfiles -> DOTFILER_DIR/dotfiles

Example usage:

dotfiler init ~/mydotfiles

**** dotfiler manage DOT_FILES

Puts the DOT_FILES under management as follows:

1. Unmanages all directories in DOT_FILES
2. Copys the DOT_FILES to the Dotfiler dir without leading dots (into
   subdirectories as appropirate)
3. Creates symlinks for all DOT_FILES pointing to the corresponding
   file in the Dotfiler dir
4. Adds the DOT_FILES to the list of files under management in
   the Dotfiler config file

Example usage:

cd ~
dotfiler manage .emacs .vimrc .ssh/config .bash

**** dotfiler unmanage DOT_FILES

Removes DOT_FILES from management as follows:

1. Removes DOT_FILES Dotfiler symlinks (recursively for dot-directories)
2. Moves the Dotfiler dir files corresponding to DOT_FILES back to the
   home directory adding the leading dot

Example usage:

cd ~
dotfiler unmanage .emacs .ssh/config
